snippet directive
	module ${1} {
	'use strict';


		export class ${2}Controller {

			constructor (log : ng.ILogService) {
				log.log('hello world');
			}
		}

		export function ${2}Directive {

			return {
				restrict: 'EA',
				controller: ${2}Controller,
				controllerAs: 'vm',
				templateUrl: '${2}.html',
				link: function (scope, element, attrs) {
			};
		}
	}

endsnippet

snippet controller
	module ${1} {
		'use strict';

		export class ${2}Controller {
			
			constructor ($log : ng.ILogService) {
			$log.log('hello world');
			}

		}

	}
endsnippet

snippet service
	module ${1} {
		'use strict';

		export class ${2}Service {
			
			constructor () {
				${0}
			}

		}

	}
endsnippet


snippet reference
	/// <reference path="${0}" />
endsnippet

snippet service2
import {Injectable} from 'angular2/core';
import {LoggerService} from '../logger.service.ts';


@Injectable()
export class MyService {

    constructor (private _logger : LoggerService) {
    }

}

endsnippet

snippet component2


import {Component} from 'angular2/core';

import {Alert} from 'ng2-angular/ng2-angular';
import {AlertHtml} from './alert.html';
import {AlertService} from './alert.service.ts';


export interface IAlert {
    message: string;
    level: string;
}

@Component({
    selector: 'dt-alert',
    template: AlertHtml,
    directives: [Alert]
})

export class AlertListComponent implements OnInit {

    constructor(public service : AlertService) {

    }

}


endsnippet
